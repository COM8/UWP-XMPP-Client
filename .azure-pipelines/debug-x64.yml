# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  Solution: 'UWPX-Client.sln'
  BuildConfiguration: 'Debug'
  BuildPlatform: 'x64'
  AppxPackageDir: '$(Build.artifactStagingDirectory)\AppxPackages\\'
  ArtifactName: 'UWPX-$(BuildPlatform)-$(BuildConfiguration)'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  displayName: 'NuGet Restore'
  inputs:
    restoreSolution: '$(Solution)'

- task: DownloadSecureFile@1
  name: 'signingCert'
  displayName: 'Download Signing Certificate'
  inputs:
    secureFile: 'Component_Tests_TemporaryKey.pfx'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      Write-Host "Start adding the PFX file to the certificate store."

      $pfxpath = '$(signingCert.secureFilePath)'
      
      Add-Type -AssemblyName System.Security
      $cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2
      $cert.Import($pfxpath, "", [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]"PersistKeySet")
      $store = new-object system.security.cryptography.X509Certificates.X509Store -argumentlist "MY", CurrentUser
      $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]"ReadWrite")
      $store.Add($cert)
      $store.Close()

- task: VSBuild@1
  displayName: 'Build $(BuildPlatform) Debug'
  inputs:
    solution: '$(Solution)'
    vsVersion: '16.0'
    msbuildArgs: '/p:AppxBundlePlatforms="$(BuildPlatform)"
                  /p:AppxPackageDir="$(AppxPackageDir)"
                  /p:AppxBundle=Always
                  /p:UapAppxPackageBuildMode=StoreUpload
                  /p:AppxPackageSigningEnabled=true
                  /p:PackageCertificateThumbprint="" 
                  /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"
                  /t:Component_Tests'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: VSTest@2
  inputs:
    testSelector: 'testAssemblies'
    testAssemblyVer2: '**\Component_Tests_1.0.0.0_$(BuildPlatform)_$(BuildConfiguration).appxbundle'
    searchFolder: '$(AppxPackageDir)'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact: $(ArtifactName)'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(ArtifactName)'
