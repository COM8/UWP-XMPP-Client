# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

# Disable all commit triggers:
trigger: none

# Disable PR triggers:
pr: none

pool:
  vmImage: 'windows-2019'

variables:
  Solution: 'UWPX-Client.sln'
  BuildConfiguration: 'Debug'
  BuildPlatform: 'x86'
  AppxPackageDir: '$(Build.artifactStagingDirectory)\AppxPackages\\'
  ArtifactName: 'UWPX-$(BuildPlatform)-$(BuildConfiguration)'

steps:
- task: NuGetToolInstaller@1
  displayName: 'Install NuGet'

- task: NuGetCommand@2
  displayName: 'NuGet Restore'
  inputs:
    restoreSolution: '$(Solution)'

- task: DownloadSecureFile@1
  name: 'signingCert'
  displayName: 'Download Signing Certificate'
  inputs:
    secureFile: 'UWPX_UI_TemporaryKey.pfx'

- task: VSBuild@1
  displayName: 'Build $(BuildPlatform) Debug'
  inputs:
    solution: '$(Solution)'
    vsVersion: '16.0'
    msbuildArgs: '/p:AppxBundlePlatforms="$(BuildPlatform)"
                  /p:AppxPackageDir="$(AppxPackageDir)"
                  /p:AppxBundle=Always
                  /p:UapAppxPackageBuildMode=StoreUpload
                  /p:AppxPackageSigningEnabled=true
                  /p:PackageCertificateThumbprint="" 
                  /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)"
                  /t:Packaging'
    platform: '$(BuildPlatform)'
    configuration: '$(BuildConfiguration)'

- task: PowerShell@2
  displayName: 'Clone UWPX Installer'
  inputs:
    targetType: 'inline'
    script: |
      git clone https://github.com/UWPX/UWPX-Installer.git

- task: PowerShell@2
  inputs:
    filePath: '.azure-pipelines\scripts\Setup_Installer_Resources.ps1'
    arguments: '$(Build.ArtifactStagingDirectory)\$(ArtifactName) UWPX-Installer\UWPX-Installer\Resources'

- task: PowerShell@2
  displayName: 'Tree'
  inputs:
    targetType: 'inline'
    script: |
      tree

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: '$(ArtifactName)'
